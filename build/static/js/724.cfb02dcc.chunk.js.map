{"version":3,"file":"static/js/724.cfb02dcc.chunk.js","mappings":"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","sources":["components/Logo/index.tsx","constanst/index.ts","containers/Main/components/Answer/index.tsx","containers/Main/components/Bet/index.tsx","containers/Main/components/Complete/index.tsx","containers/Main/components/HelpBox/index.tsx","containers/Main/components/Question/index.tsx","containers/Main/components/Timer/index.tsx","assets/images/icons/audio.svg","assets/images/icons/mute-audio.svg","hooks/useAudio.ts","containers/Main/components/guid/index.tsx","containers/Main/components/TimeStartGameGuid/index.tsx","containers/Main/components/Game/index.tsx"],"sourcesContent":["import logo from '../../assets/images/logo.png';\r\nimport logo2 from '../../assets/images/game-over.png';\r\nimport \"./index.scss\";\r\n\r\ninterface TNGLogoProps {\r\n    size?: \"sm\" | \"lg\"\r\n}\r\nconst TNGLogo = ({ size = 'sm' }: TNGLogoProps) => {\r\n    return <div className={`tng-logo ${size}`}>\r\n        <img src={logo} alt=\"TNG\" />\r\n    </div>\r\n}\r\n\r\nexport const TNGLogoFailed = ({ size = 'sm' }: TNGLogoProps) => {\r\n    return <div className={`tng-logo ${size}`}>\r\n        <img src={logo2} alt=\"TNG\" />\r\n    </div>\r\n}\r\nexport default TNGLogo","export const USER_PROFILE_KEY = \"user-profile\";\r\nexport const QUIZ_INFO_KEY = \"quiz-info\";\r\nexport const ACCESS_TOKEN_KEY = \"access-token\";\r\nexport const REFRESH_TOKEN_KEY = \"refresh-token\";\r\nexport const QUIZ_SUMMARY_INFO = \"quiz-summary-info\"\r\n\r\nexport const START_GAME_AUDIO =\r\n  \"https://vgmsite.com/soundtracks/who-wants-to-be-a-millionaire/pzwouagx/Chi%20Vuol%20Essere%20Milionario%20%2802%29.mp3\";\r\n\r\nexport const SUCCESS_QUESTION_AUDIO =\r\n  \"https://vgmsite.com/soundtracks/who-wants-to-be-a-millionaire/idkcsxoc/Chi%20Vuol%20Essere%20Milionario%20%2816%29.mp3\";\r\n\r\nexport const MUSIC_TNG_BG_AUDIO =\r\n  \"https://ia601401.us.archive.org/21/items/tng-nb-40s/TNG%20NB-40s.mp3\";\r\n\r\nexport const SUCCESS_REPLY_AUDIO =\r\n  \"https://vgmsite.com/soundtracks/who-wants-to-be-a-millionaire/gixxxbjf/Chi%20Vuol%20Essere%20Milionario%20%2826%29.mp3\";\r\n\r\nexport const FAILED_REPLY_AUDIO =\r\n  \"https://vgmsite.com/soundtracks/who-wants-to-be-a-millionaire/fckftlja/Chi%20Vuol%20Essere%20Milionario%20%2820%29.mp3\";\r\n\r\nexport const HELP_QUESTION_AUDIO =\r\n  \"https://vgmsite.com/soundtracks/who-wants-to-be-a-millionaire/vyejuzvp/Chi%20Vuol%20Essere%20Milionario%20%2827%29.mp3\";\r\n\r\nexport const WAITING_QUESTION_AUDIO =\r\n  \"https://vgmsite.com/soundtracks/who-wants-to-be-a-millionaire/yoyxcoac/Chi%20Vuol%20Essere%20Milionario%20%2831%29.mp3\";\r\n","import { AnwserModel } from \"../../../../models/Game\";\r\nimport \"./index.scss\";\r\n\r\ninterface TNGAnswerProps {\r\n  index: number;\r\n  answer: AnwserModel;\r\n  selected?: boolean;\r\n  lg?: boolean;\r\n  onSelected: () => void;\r\n  statusQuestion: \"selected\" | \"correct\" | \"incorrect\" | \"start\";\r\n  helpQuestions: string[];\r\n  answerSuccessId: string;\r\n}\r\nconst TNGAnswer = ({\r\n  answer,\r\n  index,\r\n  selected,\r\n  lg = false,\r\n  onSelected,\r\n  statusQuestion,\r\n  helpQuestions,\r\n  answerSuccessId,\r\n}: TNGAnswerProps) => {\r\n  const OPTS = [\"A\", \"B\", \"C\", \"D\"];\r\n  const getStyled = selected ? statusQuestion : \"\";\r\n  const isFailed = !helpQuestions.includes(answer.id);\r\n  const isSuccess = answerSuccessId === answer.id ? \"correct\" : \"\";\r\n\r\n  return isFailed ? (\r\n    <div\r\n      className={`tng-answer ${\r\n        index % 2 === 1 ? \"right\" : \"\"\r\n      } ${getStyled} ${isSuccess}`}\r\n      onClick={onSelected}\r\n    >\r\n      <div className=\"tng-answer-body\">\r\n        <>\r\n          <b>{OPTS[index]}:</b>\r\n          <span>{answer.content}</span>\r\n        </>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\nexport default TNGAnswer;\r\n","import AOS from \"aos\";\r\nimport { useEffect, useState } from \"react\";\r\nimport TNGButton from \"../../../../components/Button\";\r\nimport { useWindowSize } from \"../../../../hooks/hooks\";\r\nimport closeIcon from \"../../../../assets/images/icons/close.svg\";\r\nimport \"./index.scss\";\r\n\r\ninterface TNGBetProps {\r\n  onDismiss: () => void;\r\n  onBetConfirm: (bet: number) => void;\r\n  yourBet: number;\r\n  disableBet: boolean;\r\n  point: number;\r\n}\r\nconst TNGBet = ({\r\n  onDismiss,\r\n  onBetConfirm,\r\n  yourBet,\r\n  disableBet,\r\n  point,\r\n}: TNGBetProps) => {\r\n  const [width, height] = useWindowSize();\r\n  const [scale, setScale] = useState(1);\r\n  const [bet, setBet] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      AOS.init();\r\n    }, 100);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setScale(1);\r\n    if (width < 1440 || height < 1024) {\r\n      const scaleX = width / 1440;\r\n      const scaleY = height / 1024;\r\n      setScale(scaleX < scaleY ? scaleX : scaleY);\r\n    }\r\n    if (width < 1199) {\r\n      setScale(0.8);\r\n    }\r\n    if (width < 767) {\r\n      setScale(0.6);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [width]);\r\n\r\n  return (\r\n    <div className=\"tng-bet\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n      <button className=\"tng-bet-close\" onClick={onDismiss}>\r\n        <img src={closeIcon} alt=\"\" />\r\n      </button>\r\n      <div className=\"tng-bet-inner\" style={{ transform: `scale(${scale})` }}>\r\n        <h3>Bạn có muốn cược điểm?</h3>\r\n        <div className=\"tng-bet-options\">\r\n          <TNGButton\r\n            text=\"20%\"\r\n            className={`${bet === 20 ? \"active\" : \"outline\"} tng-btn-bet`}\r\n            onClick={() => setBet(20)}\r\n          />\r\n          <TNGButton\r\n            text=\"50%\"\r\n            className={`${bet === 50 ? \"active\" : \"outline\"} tng-btn-bet`}\r\n            onClick={() => setBet(50)}\r\n          />\r\n          <TNGButton\r\n            text=\"100%\"\r\n            className={`${bet === 100 ? \"active\" : \"outline\"} tng-btn-bet`}\r\n            onClick={() => setBet(100)}\r\n          />\r\n        </div>\r\n        <TNGButton\r\n          disabled={!bet}\r\n          text=\"Chọn\"\r\n          className=\"rectangle\"\r\n          onClick={() => onBetConfirm(bet)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default TNGBet;\r\n","import AOS from \"aos\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { authAPI, setAxiosToken } from \"../../../../api\";\r\nimport { ACCESS_TOKEN_KEY, QUIZ_SUMMARY_INFO } from \"../../../../constanst\";\r\nimport { useWindowSize } from \"../../../../hooks/hooks\";\r\nimport { renderTitleTeamTNG } from \"../SelectTeam\";\r\nimport \"./index.scss\";\r\n\r\nconst TNGComplete = (props: { point: number; handleRetryGame: () => void }) => {\r\n  const [isRetry, setIsRetry] = useState<boolean>(false);\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  const [width, height] = useWindowSize();\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  const [scale, setScale] = useState(1);\r\n  useEffect(() => {\r\n    setScale(1);\r\n    if (width < 767) {\r\n      setScale(0.6);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [width]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      AOS.init();\r\n    }, 100);\r\n  }, []);\r\n\r\n  const handleRetryGame = async () => {\r\n    const accessToken = localStorage.getItem(ACCESS_TOKEN_KEY) ?? \"\";\r\n    setAxiosToken(accessToken);\r\n    try {\r\n      const response = await authAPI.retryCheck();\r\n\r\n      if (response.status === 200) {\r\n        console.log(\"\");\r\n        if (response.data.data < 2) {\r\n          props.handleRetryGame();\r\n        } else {\r\n          setIsRetry(false);\r\n          toast.error(\"Bạn đã hết lượt thi\");\r\n        }\r\n      }\r\n    } catch (error) { }\r\n  };\r\n\r\n  const getTeam: any = localStorage.getItem(\"user-profile\");\r\n  const user = JSON.parse(getTeam);\r\n  const getSummaryInfo = () => {\r\n    const getLocalQuiz: any = localStorage.getItem(QUIZ_SUMMARY_INFO);\r\n    return JSON.parse(getLocalQuiz);\r\n  };\r\n\r\n  const getStatusFinish = () => {\r\n    const summary = getSummaryInfo();\r\n    if (summary?.trialCount === 1) {\r\n      return {\r\n        total: summary?.correctCount1 + \"/15\",\r\n        isFinish: summary?.correctCount1 >= 12,\r\n      };\r\n    }\r\n\r\n    if (summary?.trialCount === 2) {\r\n      return {\r\n        total: summary?.correctCount2 + \"/15\",\r\n        isFinish: summary?.correctCount2 >= 12,\r\n      };\r\n    }\r\n\r\n    return {\r\n      total: \"0/15\",\r\n      isFinish: false,\r\n    };\r\n  };\r\n  const condition = getStatusFinish().isFinish;\r\n  const styled = condition ? \"success\" : \"failed\";\r\n\r\n  const isCase1 = !isRetry && getSummaryInfo()?.trialCount === 1;\r\n  const isCase2 = !isRetry && getSummaryInfo()?.trialCount === 2;\r\n\r\n  const canRetry = !condition && isCase1;\r\n\r\n  return (\r\n    <div\r\n      className={`tng-complete ${styled} ${canRetry ? \"canretry\" : \"\"}`}\r\n      data-aos=\"fade-up\"\r\n      data-aos-delay=\"200\"\r\n    >\r\n      {condition && (\r\n        <div className=\"pyro\">\r\n          <div className=\"before\"></div>\r\n          <div className=\"after\"></div>\r\n        </div>\r\n      )}\r\n      <div className=\"tng-complete-wrap\">\r\n        <div className={`tng-complete-inner ${styled}`}>\r\n          <div className=\"tng-complete-body\">\r\n            {!condition && (\r\n              <h2>\r\n                BẠN CẦN NẠP THÊM <br />\r\n                NĂNG LƯỢNG\r\n              </h2>\r\n            )}\r\n            <ul>\r\n              <li>\r\n                <label>Liên quân:</label>{\" \"}\r\n                <span>{renderTitleTeamTNG(user?.union)}</span>\r\n              </li>\r\n              <li>\r\n                <label>Chiến binh:</label> <span>{user?.userName}</span>\r\n              </li>\r\n              <li>\r\n                <label>Số câu:</label> <span>{getStatusFinish().total}</span>\r\n              </li>\r\n              <li style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                <label>Tổng điểm:</label>&nbsp;<b style={{ color: 'red', fontSize: '24px', fontFamily: 'sans-serif' }}>{props.point}</b>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          {isCase1 && (\r\n            <div className={condition ? 'action-1' : 'action'} onClick={handleRetryGame}>\r\n              <span>Tiếp tục chiến đấu!</span>\r\n            </div>\r\n          )}\r\n\r\n          {isCase2 && (\r\n            <div className={condition ? 'action-1' : 'action'}>\r\n              <span>Bạn đã hết lượt thi đấu!</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default TNGComplete;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useWindowSize } from \"../../../../hooks/hooks\";\r\nimport \"./index.scss\";\r\n\r\ninterface TNGHelpBoxProps {\r\n  onSkip: () => void;\r\n  on5050: () => void;\r\n  onBet: () => void;\r\n\r\n  yourBet: number;\r\n  disableBet: boolean;\r\n  disableNextQuestion: boolean;\r\n  disable5050: boolean;\r\n}\r\nconst TNGHelpBox = ({\r\n  onSkip,\r\n  on5050,\r\n  onBet,\r\n  yourBet,\r\n  disableBet,\r\n  disableNextQuestion,\r\n  disable5050,\r\n}: TNGHelpBoxProps) => {\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  const [width, height] = useWindowSize();\r\n  const [isLg, setIsLg] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (width < 767) {\r\n      setIsLg(false);\r\n    } else {\r\n      setIsLg(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [width]);\r\n\r\n  return (\r\n    <div className=\"tng-help-box\">\r\n      <button type=\"button\" disabled={disableNextQuestion} onClick={onSkip}>\r\n        <svg\r\n          width=\"71\"\r\n          height=\"72\"\r\n          viewBox=\"0 0 71 72\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <circle cx=\"35.4345\" cy=\"36.0322\" r=\"35.0488\" fill=\"white\" />\r\n          <path\r\n            d=\"M18.2184 50.4278L32.3474 38.681V31.863L18.2184 20.1161C16.4933 18.7197 13.9468 19.8697 13.9468 22.1698V48.3742C13.9468 50.6743 16.4933 51.8243 18.2184 50.4278ZM39.2476 50.4278L55.0196 37.3667C56.2518 36.2988 56.2518 34.4095 55.0196 33.3416L39.2476 20.2804C37.5226 18.884 34.8939 20.034 34.8939 22.2519V48.5385C34.9761 50.6743 37.5226 51.8243 39.2476 50.4278Z\"\r\n            fill=\"currentColor\"\r\n          />\r\n        </svg>\r\n        <span>\r\n          Bỏ qua\r\n          {isLg ? <br /> : \" \"}\r\n          câu hỏi\r\n        </span>\r\n      </button>\r\n      <button type=\"button\" disabled={disable5050} onClick={on5050} style={{ marginBottom: 0 }}>\r\n        <svg\r\n          width=\"71\"\r\n          height=\"71\"\r\n          viewBox=\"0 0 71 71\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <circle cx=\"35.4905\" cy=\"35.1857\" r=\"35.1048\" fill=\"white\" />\r\n          <path\r\n            d=\"M19.6672 30.2764C19.6672 33.2325 17.2629 35.5974 14.3069 35.5974H11.1537C9.30122 35.5974 7.68523 34.4544 7.09401 32.6807C6.89694 32.0107 7.25167 31.3012 7.8823 31.1041C8.55234 30.8677 9.26181 31.2224 9.49829 31.8924C9.73478 32.6019 10.4048 33.0749 11.1537 33.0749H14.3069C15.8834 33.0749 17.1447 31.8136 17.1447 30.2764C17.1447 28.7393 15.8834 27.478 14.3069 27.478H8.31586C7.92171 27.478 7.56698 27.3204 7.3305 27.005C7.09401 26.7291 6.97576 26.335 7.05459 25.9803L8.31586 19.0039C8.4341 18.4127 8.94649 17.9791 9.57712 17.9791H17.1447C17.8147 17.9791 18.406 18.5309 18.406 19.2404C18.406 19.9104 17.8147 20.5017 17.1447 20.5017H10.6019L9.81361 24.9555H14.3069C17.2629 24.9555 19.6672 27.3204 19.6672 30.2764Z\"\r\n            fill=\"currentColor\"\r\n          />\r\n          <path\r\n            d=\"M25.9735 17.9791C22.4657 17.9791 19.6672 20.7776 19.6672 24.2854V29.2911C19.6672 32.7596 22.4657 35.5974 25.9735 35.5974C29.442 35.5974 32.2799 32.7596 32.2799 29.2911V24.246C32.2799 20.7776 29.442 17.9791 25.9735 17.9791ZM29.7573 29.2911C29.7573 31.38 28.0231 33.0749 25.9735 33.0749C23.8846 33.0749 22.1898 31.38 22.1898 29.2911V24.246C22.1898 22.1965 23.8846 20.4622 25.9735 20.4622C28.0231 20.4622 29.7573 22.1965 29.7573 24.246V29.2911Z\"\r\n            fill=\"currentColor\"\r\n          />\r\n          <path\r\n            d=\"M28.9939 45.9634C28.7969 45.9634 28.5998 45.924 28.4027 45.8057C27.7721 45.4904 27.575 44.7021 27.9297 44.1109L38.0198 26.4532C38.3352 25.8226 39.1235 25.6255 39.7147 25.9803C40.3453 26.2956 40.5424 27.0839 40.1876 27.6751L30.0975 45.3328C29.861 45.7663 29.4669 45.9634 28.9939 45.9634Z\"\r\n            fill=\"currentColor\"\r\n          />\r\n          <path\r\n            d=\"M51.3377 47.0714C51.3377 50.0274 48.9335 52.3923 45.9774 52.3923H42.8242C40.9717 52.3923 39.3557 51.2493 38.7645 49.4756C38.5675 48.8056 38.9222 48.0961 39.5528 47.8991C40.2229 47.6626 40.9323 48.0173 41.1688 48.6873C41.4053 49.3968 42.0753 49.8698 42.8242 49.8698H45.9774C47.554 49.8698 48.8152 48.6085 48.8152 47.0714C48.8152 45.5342 47.554 44.2729 45.9774 44.2729H39.9864C39.5922 44.2729 39.2375 44.1153 39.001 43.7999C38.7645 43.524 38.6463 43.1299 38.7251 42.7752L39.9864 35.7988C40.1046 35.2076 40.617 34.774 41.2476 34.774H48.8152C49.4853 34.774 50.0765 35.3258 50.0765 36.0353C50.0765 36.7053 49.4853 37.2966 48.8152 37.2966H42.2724L41.4841 41.7504H45.9774C48.9335 41.7504 51.3377 44.1153 51.3377 47.0714Z\"\r\n            fill=\"currentColor\"\r\n          />\r\n          <path\r\n            d=\"M57.6441 34.774C54.1362 34.774 51.3377 37.5725 51.3377 41.0803V46.086C51.3377 49.5545 54.1362 52.3923 57.6441 52.3923C61.1125 52.3923 63.9504 49.5545 63.9504 46.086V41.0409C63.9504 37.5725 61.1125 34.774 57.6441 34.774ZM61.4278 46.086C61.4278 48.175 59.6936 49.8698 57.6441 49.8698C55.5551 49.8698 53.8603 48.175 53.8603 46.086V41.0409C53.8603 38.9914 55.5551 37.2571 57.6441 37.2571C59.6936 37.2571 61.4278 38.9914 61.4278 41.0409V46.086Z\"\r\n            fill=\"currentColor\"\r\n          />\r\n        </svg>\r\n        <span>\r\n          Bỏ 2 đáp\r\n          {isLg ? <br /> : \" \"}\r\n          án sai\r\n        </span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default TNGHelpBox;\r\n","import { useEffect, useState } from \"react\";\r\nimport { QuestionModel } from \"../../../../models/Game\";\r\nimport \"./index.scss\";\r\n\r\ninterface TNGQuestionProps {\r\n    question: QuestionModel\r\n}\r\nconst TNGQuestion = ({ question }: TNGQuestionProps) => {\r\n    const [qSize, setQSize] = useState('');\r\n    useEffect(() => {\r\n        setQSize(question.content.length > 80 ? 'lg' : '');\r\n    }, [question])\r\n\r\n    return <div className={`tng-question ${qSize}`}>\r\n        <div className=\"tng-question-body\">{question.content}</div>\r\n    </div>\r\n}\r\nexport default TNGQuestion","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Countdown from \"react-countdown\";\r\nimport { QUIZ_INFO_KEY } from \"../../../../constanst\";\r\nimport \"./index.scss\";\r\n\r\ninterface TNGTimerProps {\r\n  onCompleted: () => void;\r\n  setCurrentTime: React.Dispatch<React.SetStateAction<string>>;\r\n  styled: string;\r\n  isCompleted: boolean;\r\n}\r\nconst TNGTimer = ({\r\n  onCompleted,\r\n  setCurrentTime,\r\n  styled,\r\n  isCompleted,\r\n}: TNGTimerProps) => {\r\n  const getLocalQuiz: any = localStorage.getItem(QUIZ_INFO_KEY);\r\n  const [localEndTime, setLocalEndTime] = useState<any>(null);\r\n\r\n  useEffect(() => {\r\n    if (getLocalQuiz) {\r\n      const quizInfo: any = JSON.parse(getLocalQuiz);\r\n      if (quizInfo?.end) {\r\n        const stillUtc = moment.utc(quizInfo?.end).toDate();\r\n        const local = moment(stillUtc).local().format();\r\n        setLocalEndTime(new Date(local));\r\n      }\r\n    }\r\n  }, [getLocalQuiz]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setLocalEndTime(null);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`tng-timer ${styled}`}>\r\n      {localEndTime ? (\r\n        <Countdown\r\n          onComplete={onCompleted}\r\n          date={localEndTime}\r\n          renderer={(props) => {\r\n            const timer = `00:${\r\n              props.minutes < 10 ? `0${props.minutes}` : props.minutes\r\n            }:${props.seconds < 10 ? `0${props.seconds}` : props.seconds}`;\r\n            setCurrentTime(timer);\r\n\r\n            return (\r\n              <span>\r\n                {props.minutes < 10 ? `0${props.minutes}` : props.minutes}:\r\n                {props.seconds < 10 ? `0${props.seconds}` : props.seconds}’\r\n              </span>\r\n            );\r\n          }}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default TNGTimer;\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgAudio(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 35,\n    height: 29,\n    viewBox: \"0 0 35 29\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.6726 0.524414C19.3601 0.399414 19.1101 0.336914 18.8601 0.336914C18.3601 0.336914 17.8601 0.524414 17.4851 0.899414L9.04761 8.33691H3.86011C2.17261 8.33691 0.860107 9.71191 0.860107 11.3369V17.2744C0.860107 18.8994 2.17261 20.2119 3.86011 20.2119H9.04761L17.4851 27.7119C17.8601 28.2119 18.3601 28.3369 18.8601 28.3369C19.1101 28.3369 19.3601 28.3369 19.6726 28.2119C20.3601 27.8369 20.8601 27.1494 20.8601 26.3369V2.33691C20.8601 1.58691 20.3601 0.836914 19.6726 0.524414ZM17.8601 24.1494L10.2351 17.3369H3.86011V11.3994H10.2351L17.8601 4.58691V24.1494ZM26.6101 9.71191C26.3601 9.52441 25.9851 9.39941 25.6726 9.39941C25.2351 9.39941 24.7976 9.58691 24.4851 9.96191C23.9851 10.5869 24.0476 11.5244 24.7351 12.0869C25.4226 12.6494 25.8601 13.4619 25.8601 14.3369C25.8601 15.2744 25.4226 16.0869 24.7351 16.6494C24.0476 17.2119 23.9851 18.1494 24.4851 18.7744C24.7976 19.1494 25.2351 19.3369 25.6726 19.3369C25.9851 19.3369 26.3601 19.2119 26.6101 19.0244C28.0476 17.8369 28.8601 16.1494 28.8601 14.3369C28.8601 12.5869 28.0476 10.8994 26.6101 9.71191ZM30.4226 5.08691C30.1101 4.89941 29.7976 4.77441 29.4226 4.77441C28.9851 4.77441 28.6101 4.96191 28.2976 5.33691C27.7351 5.96191 27.8601 6.89941 28.4851 7.46191C30.6101 9.14941 31.8601 11.7119 31.8601 14.3369C31.8601 17.0244 30.6101 19.5869 28.4851 21.2744C27.8601 21.8369 27.7351 22.7744 28.2976 23.3994C28.6101 23.7744 28.9851 23.9619 29.4226 23.9619C29.7976 23.9619 30.1101 23.8369 30.4226 23.6494C33.2351 21.3369 34.8601 17.9619 34.8601 14.3369C34.8601 10.7744 33.2351 7.39941 30.4226 5.08691Z\",\n    fill: \"white\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAudio);\nexport default __webpack_public_path__ + \"static/media/audio.c2d695852f933363bb3e64f2eadaae19.svg\";\nexport { ForwardRef as ReactComponent };","var _g, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMuteAudio(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 40,\n    height: 40,\n    viewBox: \"0 0 40 40\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_305_9)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.4062 33.365L33.9062 28.99C36.4687 26.6775 38.0312 23.4275 38.0312 19.99C38.0312 16.4275 36.4062 13.0525 33.5937 10.8025C33.2812 10.615 32.9687 10.49 32.5937 10.49C32.1562 10.49 31.7812 10.6775 31.4687 11.0525C30.9062 11.6775 31.0312 12.615 31.6562 13.1775C33.7812 14.8025 35.0312 17.365 35.0312 19.99C35.0312 22.6775 33.7812 25.24 31.6562 26.9275C31.5937 26.99 31.5937 27.0525 31.5312 27.115L28.7187 24.99C28.7812 24.99 28.7812 24.99 28.8437 24.99C29.1562 24.99 29.5312 24.865 29.7812 24.6775C31.2187 23.49 32.0312 21.8025 32.0312 19.99C32.0312 18.24 31.2187 16.5525 29.7812 15.365C29.5312 15.1775 29.1562 15.0525 28.8437 15.0525C28.4062 15.0525 27.9687 15.24 27.6562 15.615C27.1562 16.24 27.2187 17.1775 27.9062 17.74C28.5937 18.3025 29.0312 19.115 29.0312 19.99C29.0312 20.9275 28.5937 21.74 27.9062 22.3025C27.4062 22.74 27.2187 23.365 27.4062 23.9275L24.0312 21.24V7.98999C24.0312 7.23999 23.5312 6.48999 22.8437 6.17749C22.5312 6.05249 22.2812 5.98999 22.0312 5.98999C21.5312 5.98999 21.0312 6.17749 20.6562 6.55249L13.4062 12.99L2.40625 4.36499C1.78125 3.80249 0.843747 3.92749 0.343747 4.61499C-0.218753 5.23999 -0.0937533 6.17749 0.593747 6.67749L37.5312 35.615C37.8437 35.9275 38.1562 35.99 38.4687 35.99C38.9062 35.99 39.3437 35.8025 39.6562 35.4275C40.2187 34.8025 40.0937 33.865 39.4062 33.365ZM21.0312 18.865L15.8437 14.865L21.0312 10.24V18.865ZM21.0312 29.8025L13.4062 22.99H7.03125V17.0525H8.90625L5.53125 14.4275C4.65625 14.9275 4.03125 15.865 4.03125 16.99V22.99C4.03125 24.6775 5.34375 25.99 7.03125 25.99H12.2187L20.6562 33.4275C21.0312 33.865 21.5312 33.99 22.0312 33.99C22.2812 33.99 22.5312 33.99 22.8437 33.865C23.5312 33.49 24.0312 32.8025 24.0312 31.99V28.865L21.0312 26.5525V29.8025Z\",\n    fill: \"white\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_305_9\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 40,\n    height: 40,\n    fill: \"white\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMuteAudio);\nexport default __webpack_public_path__ + \"static/media/mute-audio.8c55379765d3f8aea3dc2c4a7ee46d69.svg\";\nexport { ForwardRef as ReactComponent };","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useMemo, useEffect, useState } from \"react\";\r\n\r\nconst useAudio = (url: string, isLoop: boolean) => {\r\n  const audio = useMemo(() => new Audio(url), []);\r\n\r\n  const [playing, setPlaying] = useState(false);\r\n  const playAudio = () => setPlaying(true);\r\n  const pauseAudio = () => setPlaying(false);\r\n\r\n  useEffect(() => {\r\n    audio.currentTime = 0;\r\n    if (playing) {\r\n      if (isLoop) {\r\n        audio.loop = true;\r\n      }\r\n    }\r\n    if (!playing) {\r\n      audio.loop = false;\r\n    }\r\n    playing ? audio.play() : audio.pause();\r\n  }, [playing]);\r\n\r\n  useEffect(() => {\r\n    audio.addEventListener(\"ended\", () => setPlaying(false));\r\n    return () => {\r\n      audio.removeEventListener(\"ended\", () => setPlaying(false));\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    isPlaying: playing,\r\n    playAudio,\r\n    pauseAudio,\r\n  };\r\n};\r\n\r\nexport default useAudio;\r\n","import AOS from \"aos\";\r\nimport { useEffect } from \"react\";\r\nimport TNGButton from \"../../../../components/Button\";\r\n// import TNGButton from \"../../../../components/Button\";\r\nimport \"./index.scss\";\r\n\r\nconst TNGGuidGame = (props: { handleStartGame: () => void }) => {\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      AOS.init();\r\n    }, 100);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`tng-complete-g`} data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n      <div className=\"tng-complete-g-wrap\">\r\n        <div className={`tng-complete-inner`}>\r\n          <div className=\"tng-complete-body\">\r\n            <h2>LUẬT THI ĐẤU</h2>\r\n            <ul>\r\n              <li>\r\n                Tổng thời gian thi đấu: <span>10 phút</span>\r\n              </li>\r\n              <li>\r\n                Mỗi chiến binh cần vượt qua tối thiểu{\" \"}\r\n                <span>12/15 thử thách</span>\r\n              </li>\r\n              <li>\r\n                Vượt qua mỗi thử thách được cộng 10 điểm, không vượt qua trừ 10\r\n                điểm\r\n              </li>\r\n              <li>\r\n                Mỗi chiến binh có <span>01 quyền trợ giúp:</span> Lược bỏ 2 đáp\r\n                án sai hoặc bỏ qua thử thách\r\n              </li>\r\n              <li>\r\n                Đừng bỏ lỡ tính năng cược điểm với 01 trong các mức lựa chọn\r\n                cược <span>20% - 50% - 100%</span> số điểm đang có\r\n              </li>\r\n              <li>\r\n                Mỗi chiến binh được thi đấu 02 lần. Hệ thống ghi nhận kết quả\r\n                cao hơn\r\n              </li>\r\n              <li>\r\n                Lưu ý: Thời gian thi đấu <span>8:00 - 19:00 hàng ngày</span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <TNGButton\r\n          text=\"BẮT ĐẦU\"\r\n          className=\"tng-help-box-btn\"\r\n          onClick={props.handleStartGame}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default TNGGuidGame;\r\n","import AOS from \"aos\";\r\nimport { useEffect } from \"react\";\r\nimport \"./index.scss\";\r\n\r\nconst TimeStartGameGuid = () => {\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      AOS.init();\r\n    }, 100);\r\n  }, []);\r\n\r\n  const hour =\r\n    new Date().getHours() > 10\r\n      ? new Date().getHours()\r\n      : \"0\" + new Date().getHours();\r\n  const min =\r\n    new Date().getMinutes() > 10\r\n      ? new Date().getMinutes()\r\n      : \"0\" + new Date().getMinutes();\r\n\r\n  return (\r\n    <div className={`tng-complete-b`} data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n      <div className=\"tng-complete-wrap\">\r\n        <div className={`tng-complete-inner`}>\r\n          <div className=\"tng-complete-body\">\r\n            <div className=\"box-content\">\r\n              <h2>\r\n                Bây giờ là {hour}:{min}\r\n              </h2>\r\n              <p>\r\n                Thời gian bắt đầu cuộc thi từ <span>08:00 - 17:00</span>\r\n              </p>\r\n              <p>Vui lòng quay lại sau</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default TimeStartGameGuid;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport AOS from \"aos\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { authAPI, setAxiosToken } from \"../../../../api\";\r\nimport LoadingPage from \"../../../../components/loadingPage\";\r\nimport TNGLogo from \"../../../../components/Logo\";\r\nimport {\r\n  ACCESS_TOKEN_KEY,\r\n  HELP_QUESTION_AUDIO,\r\n  QUIZ_INFO_KEY,\r\n  QUIZ_SUMMARY_INFO,\r\n} from \"../../../../constanst\";\r\nimport { useWindowSize } from \"../../../../hooks/hooks\";\r\nimport { AnwserModel, QuestionModel } from \"../../../../models/Game\";\r\nimport TNGAnswer from \"../Answer\";\r\nimport TNGBet from \"../Bet\";\r\nimport TNGComplete from \"../Complete\";\r\nimport TNGHelpBox from \"../HelpBox\";\r\nimport TNGQuestion from \"../Question\";\r\nimport TNGTimer from \"../Timer\";\r\nimport audioIcon from \"../../../../assets/images/icons/audio.svg\";\r\nimport muteAudioIcon from \"../../../../assets/images/icons/mute-audio.svg\";\r\nimport \"./index.scss\";\r\nimport { Prompt } from \"react-router\";\r\nimport useAudio from \"../../../../hooks/useAudio\";\r\nimport TNGGuidGame from \"../guid\";\r\nimport TimeStartGameGuid from \"../TimeStartGameGuid\";\r\nimport moment from \"moment\";\r\nimport tngLink from \"../../../../assets/audio/tng-audio.mp3\";\r\nimport successAudio from \"../../../../assets/audio/success-question-audio.mp3\";\r\nimport successAnswerAudio from \"../../../../assets/audio/success-answer.mp3\";\r\nimport notReplyAudio from \"../../../../assets/audio/failed-reply.mp3\";\r\nimport waitingAudio from \"../../../../assets/audio/waiting-audio.mp3\";\r\n\r\nconst TNGGame: React.FC = () => {\r\n  const [questions, setQuestion] = useState<QuestionModel[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [width, height] = useWindowSize();\r\n  const [scale, setScale] = useState(1);\r\n  const [showBet, setShowBet] = useState(false);\r\n  const [yourBet, setYourBet] = useState(0);\r\n  const [isCompleted, setIsCompleted] = useState(false);\r\n  const [currentQuestion, setCurrentQuestion] = useState<QuestionModel>({\r\n    id: \"\",\r\n    content: \"\",\r\n    answers: [],\r\n  });\r\n\r\n  const [currentAnswer, setCurrentAnswer] = useState<AnwserModel | null>(null);\r\n\r\n  const tNGAudio = useAudio(tngLink, false);\r\n  const startReplyingAudio = useAudio(successAudio, false);\r\n  const successReplyingAudio = useAudio(successAnswerAudio, false);\r\n  const failedReplyAudio = useAudio(notReplyAudio, false);\r\n  const helpQuestionAudio = useAudio(HELP_QUESTION_AUDIO, false);\r\n  const waitingQuestionAudio = useAudio(waitingAudio, false);\r\n\r\n  const [muteAudio, setMuteAudio] = useState<boolean>(false);\r\n\r\n  const waitingReplyAudio = useAudio(waitingAudio, true);\r\n\r\n  const [disableBet, setDisableBet] = useState(false);\r\n\r\n  const [point, setPoint] = useState<number>(0);\r\n  const [statusQuestion, setStatusQuestion] = useState<\r\n    \"selected\" | \"correct\" | \"incorrect\" | \"start\"\r\n  >(\"start\");\r\n\r\n  const [disableNextQuestion, setDisableNextQuestion] = useState(false);\r\n  const [isShowOut, setIsShowOut] = useState(false);\r\n  const [helpQuestions, setHelpQuestions] = useState<string[]>([]);\r\n  const localUser: any = localStorage.getItem(\"user-profile\");\r\n  const [theme, setTheme] = useState(\"\");\r\n  const [currentTime, setCurrentTime] = useState(\"00:15:00\");\r\n\r\n  const [answerSuccessId, setAnswerSuccessId] = useState<string>(\"\");\r\n  const [isPlayGame, setIsPlayGame] = useState<boolean>(true);\r\n  const [isShowGuid, setIsShowGuid] = useState<boolean>(false);\r\n\r\n  const getLocalQuizInfo = () => {\r\n    const getLocalQuiz: any = localStorage.getItem(QUIZ_INFO_KEY);\r\n    return JSON.parse(getLocalQuiz);\r\n  };\r\n\r\n  const getSummaryInfo = () => {\r\n    const getLocalQuiz: any = localStorage.getItem(QUIZ_SUMMARY_INFO);\r\n    return JSON.parse(getLocalQuiz);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (localUser) {\r\n      const userParse = JSON.parse(localUser);\r\n      if (userParse && userParse?.union) {\r\n        setTheme(\"style-\" + userParse.union);\r\n      }\r\n    }\r\n  }, [localUser]);\r\n\r\n  const setTokenWithCallApi = () => {\r\n    setLoading(true);\r\n    const accessToken = localStorage.getItem(ACCESS_TOKEN_KEY) ?? \"\";\r\n    setAxiosToken(accessToken);\r\n  };\r\n\r\n  const handleStartGame = async () => {\r\n    setTokenWithCallApi();\r\n    try {\r\n      const res = await authAPI.startQuiz();\r\n\r\n      if (res.status === 200) {\r\n        localStorage.setItem(QUIZ_INFO_KEY, JSON.stringify(res.data.data));\r\n        const summary = getSummaryInfo();\r\n        localStorage.setItem(\r\n          QUIZ_SUMMARY_INFO,\r\n          JSON.stringify({ ...summary, trialCount: 1 })\r\n        );\r\n        setQuestion(res.data.data.questions);\r\n        setCurrentQuestion(res.data.data.questions[0]);\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getCurrentQuestions = (allQuestions: QuestionModel[]) => {\r\n    const unansweredQuestion = allQuestions.filter(\r\n      (x) => x.userChooseAnswerId === null\r\n    );\r\n\r\n    if (!!unansweredQuestion.length) {\r\n      return unansweredQuestion[0];\r\n    }\r\n\r\n    return allQuestions[0];\r\n  };\r\n\r\n  const handleRetryGame = async () => {\r\n    tNGAudio.pauseAudio();\r\n    if (muteAudio) {\r\n      startReplyingAudio.playAudio();\r\n    }\r\n    setTokenWithCallApi();\r\n    try {\r\n      const res = await authAPI.startQuiz();\r\n\r\n      if (res.status === 200) {\r\n        localStorage.setItem(QUIZ_INFO_KEY, JSON.stringify(res.data.data));\r\n        const summary = getSummaryInfo();\r\n\r\n        localStorage.setItem(\r\n          QUIZ_SUMMARY_INFO,\r\n          JSON.stringify({ ...summary, trialCount: 2 })\r\n        );\r\n\r\n        setQuestion(res.data.data.questions);\r\n        setCurrentQuestion(res.data.data.questions[0]);\r\n\r\n        setIsCompleted(false);\r\n        setStatusQuestion(\"start\");\r\n        setYourBet(0);\r\n        setAnswerSuccessId(\"\");\r\n        setPoint(0);\r\n\r\n        setDisableBet(false);\r\n        setDisableNextQuestion(false);\r\n        setHelpQuestions([]);\r\n\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleConfigGame = () => {\r\n    const quizInfo = getLocalQuizInfo();\r\n\r\n    const allQuestions: QuestionModel[] = quizInfo.questions;\r\n\r\n    const answeredQuestion = allQuestions.filter(\r\n      (x) => x.userChooseAnswerId !== null\r\n    );\r\n\r\n    if (answeredQuestion.length === allQuestions.length) {\r\n      setIsCompleted(true);\r\n      return;\r\n    }\r\n\r\n    setDisableBet(!quizInfo.pointBetAvailable);\r\n    setPoint(quizInfo.point);\r\n    setDisableNextQuestion(!!quizInfo?.nextQuestion);\r\n\r\n    if (quizInfo?.helperAvailable) {\r\n      setHelpQuestions(\r\n        quizInfo?.arrayHelpQuestion ? quizInfo?.arrayHelpQuestion : []\r\n      );\r\n    } else {\r\n      setHelpQuestions([]);\r\n    }\r\n\r\n    setQuestion(allQuestions);\r\n    let currentQuestion = getCurrentQuestions(allQuestions);\r\n    setCurrentQuestion(currentQuestion);\r\n  };\r\n\r\n  const handleStartBefore = () => {\r\n    setIsShowGuid(false);\r\n    handleStartGame();\r\n  };\r\n\r\n  const handleTimeout = async () => {\r\n    if (!isCompleted) {\r\n      setTokenWithCallApi();\r\n      alert(\"Hết giờ\");\r\n      try {\r\n        const res = await authAPI.finish(\"00:00:00\");\r\n        if (res.status === 200) {\r\n          try {\r\n            const response: any = await authAPI.getUserInfo();\r\n\r\n            if (response?.status === 200) {\r\n              localStorage.setItem(\r\n                QUIZ_INFO_KEY,\r\n                JSON.stringify(response.data.data.quizInfo)\r\n              );\r\n              localStorage.setItem(\r\n                QUIZ_SUMMARY_INFO,\r\n                JSON.stringify(response.data.data.quizSummaryInfo)\r\n              );\r\n            }\r\n          } catch (err: any) {\r\n            console.log(err);\r\n          }\r\n          setLoading(false);\r\n          setIsCompleted(true);\r\n        }\r\n      } catch (error) {\r\n        setIsCompleted(true);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRecheckTimeBeforeStart = () => {\r\n    const end: any = getLocalQuizInfo()?.end;\r\n    const stillUtc = moment.utc(end).toDate();\r\n    const local = moment(stillUtc).local().format();\r\n\r\n    const currentTime = new Date();\r\n\r\n    if (new Date(local).getTime() > currentTime.getTime()) {\r\n      handleConfigGame();\r\n    } else {\r\n      handleTimeout();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      AOS.init();\r\n    }, 1000);\r\n    const getQuiz: any = localStorage.getItem(QUIZ_INFO_KEY);\r\n    const summaryInfo = localStorage.getItem(QUIZ_SUMMARY_INFO);\r\n\r\n    const currentTime = new Date();\r\n    const isPlayGame =\r\n      currentTime.getHours() >= 8 && currentTime.getHours() <= 17;\r\n\r\n    if (true) {\r\n      setIsPlayGame(false);\r\n      if (summaryInfo !== \"null\") {\r\n        const summary = getSummaryInfo();\r\n        const caseStartGame = summary?.trialCount;\r\n        const isQuiz = getQuiz === \"null\";\r\n        switch (caseStartGame) {\r\n          case 0: {\r\n            setIsShowGuid(true);\r\n            break;\r\n          }\r\n\r\n          case 1: {\r\n            if (isQuiz) {\r\n              setIsCompleted(true);\r\n              setPoint(summary.point1);\r\n            } else {\r\n              handleRecheckTimeBeforeStart();\r\n            }\r\n            break;\r\n          }\r\n\r\n          case 2: {\r\n            if (isQuiz) {\r\n              setIsCompleted(true);\r\n              setPoint(summary.point2);\r\n            } else {\r\n              handleRecheckTimeBeforeStart();\r\n            }\r\n            break;\r\n          }\r\n\r\n          default: {\r\n            setIsCompleted(true);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      setIsPlayGame(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let scaleR = 1;\r\n    if (width < 1440 || height < 1024) {\r\n      const scaleX = width / 1440;\r\n      const scaleY = height / 1024;\r\n      scaleR = scaleX < scaleY ? scaleX : scaleY;\r\n    }\r\n    setScale(scaleR);\r\n  }, [width]);\r\n\r\n  const handleSkip = async () => {\r\n    setTokenWithCallApi();\r\n\r\n    try {\r\n      const res = await authAPI.quizNextQuestion(currentQuestion.id);\r\n      if (res.status === 200) {\r\n        localStorage.setItem(QUIZ_INFO_KEY, JSON.stringify(res.data.data));\r\n        setQuestion(res.data.data.questions);\r\n\r\n        let currentQuestion = getCurrentQuestions(res.data.data.questions);\r\n        setCurrentQuestion(currentQuestion);\r\n        setDisableNextQuestion(true);\r\n\r\n        const quiz: any = getLocalQuizInfo();\r\n        let newQuiz = { ...quiz, nextQuestion: true };\r\n        localStorage.setItem(QUIZ_INFO_KEY, JSON.stringify(newQuiz));\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {}\r\n  };\r\n  const handle5050 = async () => {\r\n    setTokenWithCallApi();\r\n    try {\r\n      const res = await authAPI.getHelp(currentQuestion.id);\r\n\r\n      if (res.status === 200) {\r\n        if (muteAudio) {\r\n          helpQuestionAudio.playAudio();\r\n        }\r\n        setHelpQuestions(res.data.data);\r\n\r\n        const quiz: any = getLocalQuizInfo();\r\n\r\n        let newQuiz = {\r\n          ...quiz,\r\n          helperAvailable: true,\r\n          arrayHelpQuestion: res.data.data,\r\n        };\r\n        localStorage.setItem(QUIZ_INFO_KEY, JSON.stringify(newQuiz));\r\n\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      toast.error(\"Bạn đã sử dụng quyền này trước đó\");\r\n    }\r\n  };\r\n\r\n  const handleBet = (_bet: number) => {\r\n    setYourBet(_bet);\r\n    setShowBet(false);\r\n    let currentQuestions = getCurrentQuestions(questions);\r\n    setCurrentQuestion(currentQuestions);\r\n    setStatusQuestion(\"start\");\r\n    setAnswerSuccessId(\"\");\r\n    if (muteAudio) {\r\n      waitingReplyAudio.playAudio();\r\n    }\r\n  };\r\n  const handleCancelBet = () => {\r\n    setShowBet(false);\r\n    let currentQuestions = getCurrentQuestions(questions);\r\n    setCurrentQuestion(currentQuestions);\r\n    setStatusQuestion(\"start\");\r\n    setAnswerSuccessId(\"\");\r\n    if (muteAudio) {\r\n      waitingReplyAudio.playAudio();\r\n    }\r\n  };\r\n\r\n  const [isAnswerLg, setIsAnswerLg] = useState(false);\r\n  useEffect(() => {\r\n    setIsAnswerLg(\r\n      currentQuestion.answers.findIndex((a) => a.content.length > 60) !== -1\r\n    );\r\n  }, [currentQuestion]);\r\n\r\n  const nextQuestion = questions.filter(\r\n    (x) => x.userChooseAnswerId !== null\r\n  ).length;\r\n\r\n  const totalQsCount = nextQuestion >= 15 ? nextQuestion : nextQuestion + 1;\r\n\r\n  const cancelSelect =\r\n    (!loading && statusQuestion === \"correct\") ||\r\n    (!loading && statusQuestion === \"incorrect\");\r\n\r\n  const handleSelectAnswer = async (a: AnwserModel) => {\r\n    waitingReplyAudio.pauseAudio();\r\n    tNGAudio.pauseAudio();\r\n    if (muteAudio) {\r\n      startReplyingAudio.playAudio();\r\n    }\r\n    // start audio call answer\r\n    setCurrentAnswer(a);\r\n    setStatusQuestion(\"selected\");\r\n\r\n    const params = {\r\n      questionId: currentQuestion.id,\r\n      answerId: a.id,\r\n      pointBet: yourBet,\r\n    };\r\n\r\n    setTokenWithCallApi();\r\n    try {\r\n      const res = await authAPI.checkAnswer(params);\r\n\r\n      if (res.status === 200) {\r\n        const afterListQuestions = questions.map((el) => {\r\n          if (el.id === currentQuestion.id) {\r\n            return {\r\n              ...el,\r\n              userChooseAnswerId: a.id,\r\n            };\r\n          }\r\n          return el;\r\n        });\r\n\r\n        // get quiz in local storage - update new status quiz\r\n        const quiz: any = getLocalQuizInfo();\r\n\r\n        let nextStateQuiz = { ...quiz, questions: afterListQuestions };\r\n\r\n        if (res.data.data.currentPoint) {\r\n          nextStateQuiz = {\r\n            ...nextStateQuiz,\r\n            point: res.data.data.currentPoint.result,\r\n          };\r\n          setPoint(res.data.data.currentPoint.result);\r\n        }\r\n\r\n        if (yourBet > 0) {\r\n          setYourBet(0);\r\n          setDisableBet(true);\r\n          nextStateQuiz = { ...nextStateQuiz, pointBetAvailable: false };\r\n        }\r\n\r\n        // compare process questions\r\n        const getNumberQuestionsAnswered = afterListQuestions.filter(\r\n          (x) => x.userChooseAnswerId !== null\r\n        ).length;\r\n\r\n        localStorage.setItem(QUIZ_INFO_KEY, JSON.stringify(nextStateQuiz));\r\n\r\n        // set status question success - fail\r\n        setStatusQuestion(\r\n          res.data.data.isCorrectAnswer ? \"correct\" : \"incorrect\"\r\n        );\r\n\r\n        // set correct success id\r\n        setAnswerSuccessId(res.data.data.correctAnswerId);\r\n        startReplyingAudio.pauseAudio();\r\n        if (res.data.data.isCorrectAnswer) {\r\n          if (muteAudio) {\r\n            successReplyingAudio.playAudio();\r\n          }\r\n        } else {\r\n          if (muteAudio) {\r\n            failedReplyAudio.playAudio();\r\n          }\r\n        }\r\n\r\n        if (getNumberQuestionsAnswered === questions.length) {\r\n          if (muteAudio) {\r\n            successReplyingAudio.pauseAudio();\r\n            failedReplyAudio.pauseAudio();\r\n            !tNGAudio.isPlaying && tNGAudio.playAudio();\r\n          }\r\n        }\r\n\r\n        setTimeout(async () => {\r\n          // set state câu hỏi sau khi trả lời\r\n          setQuestion(afterListQuestions);\r\n          let currentQuestions = getCurrentQuestions(afterListQuestions);\r\n          if (getNumberQuestionsAnswered !== questions.length) {\r\n            if (\r\n              disableBet ||\r\n              yourBet > 0 ||\r\n              res.data.data.currentPoint.result === 0\r\n            ) {\r\n              setCurrentQuestion(currentQuestions);\r\n              setStatusQuestion(\"start\");\r\n              setAnswerSuccessId(\"\");\r\n              if (muteAudio) {\r\n                waitingReplyAudio.playAudio();\r\n              }\r\n            } else {\r\n              setShowBet(true);\r\n            }\r\n          }\r\n\r\n          successReplyingAudio.pauseAudio();\r\n          failedReplyAudio.pauseAudio();\r\n\r\n          if (getNumberQuestionsAnswered === questions.length) {\r\n            const res = await authAPI.finish(currentTime);\r\n            if (res.status === 200) {\r\n              localStorage.setItem(\r\n                QUIZ_INFO_KEY,\r\n                JSON.stringify(res.data.data.quizInfo)\r\n              );\r\n\r\n              const quizSummaryInfo = res?.data?.data?.quizSummaryInfo;\r\n              localStorage.setItem(\r\n                QUIZ_SUMMARY_INFO,\r\n                JSON.stringify(quizSummaryInfo)\r\n              );\r\n              setStatusQuestion(\"start\");\r\n              setLoading(false);\r\n              setIsCompleted(true);\r\n            }\r\n          }\r\n        }, 3500);\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      toast.error(\"Lỗi hệ thống\");\r\n    }\r\n  };\r\n\r\n  const handleOnOffAudio = () => {\r\n    if (muteAudio) {\r\n      tNGAudio.isPlaying && tNGAudio.pauseAudio();\r\n      startReplyingAudio.isPlaying && startReplyingAudio.pauseAudio();\r\n      successReplyingAudio.isPlaying && successReplyingAudio.pauseAudio();\r\n      failedReplyAudio.isPlaying && failedReplyAudio.pauseAudio();\r\n      helpQuestionAudio.isPlaying && helpQuestionAudio.pauseAudio();\r\n      waitingQuestionAudio.isPlaying && waitingQuestionAudio.pauseAudio();\r\n      waitingReplyAudio.isPlaying && waitingReplyAudio.pauseAudio();\r\n    }\r\n\r\n    if (!muteAudio) {\r\n      !waitingReplyAudio.isPlaying && waitingReplyAudio.playAudio();\r\n    }\r\n\r\n    setMuteAudio(!muteAudio);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Prompt\r\n        when={isShowOut}\r\n        message={() => \"Bạn có muốn thoát khỏi trò chơi\"}\r\n      />\r\n      <LoadingPage loading={loading} />\r\n      <div\r\n        className={`${cancelSelect && !showBet ? \"wrapper-loading-h\" : \"\"}`}\r\n      ></div>\r\n      <div className={`tng-game ${theme}`}>\r\n        <button type=\"button\" className=\"tng-audio\" onClick={handleOnOffAudio}>\r\n          <img src={muteAudio ? audioIcon : muteAudioIcon} alt=\"\" />\r\n        </button>\r\n        <div className=\"tng-timer-wrap\">\r\n          <TNGTimer\r\n            styled={theme}\r\n            onCompleted={handleTimeout}\r\n            setCurrentTime={setCurrentTime}\r\n            isCompleted={isCompleted}\r\n          />\r\n        </div>\r\n        <div className=\"tng-game-logo\">\r\n          <TNGLogo />\r\n        </div>\r\n        <div className=\"tng-game-score\">\r\n          <b>{point}</b>\r\n          <span>điểm</span>\r\n        </div>\r\n\r\n        <div\r\n          className=\"tng-help-box-wrap\"\r\n          style={{ transform: `scale(${scale})` }}\r\n        >\r\n          <TNGHelpBox\r\n            onSkip={handleSkip}\r\n            on5050={handle5050}\r\n            onBet={() => setShowBet(true)}\r\n            yourBet={yourBet}\r\n            disableBet={disableBet || point < 10}\r\n            disableNextQuestion={\r\n              disableNextQuestion || helpQuestions.length > 0\r\n            }\r\n            disable5050={helpQuestions.length > 0 || disableNextQuestion}\r\n          />\r\n        </div>\r\n\r\n        <div className={`tng-game-body ${isAnswerLg ? \"lg\" : \"\"}`}>\r\n          <h4 data-aos=\"fade-up\">\r\n            Câu hỏi <b>{totalQsCount}</b>/{questions.length}\r\n          </h4>\r\n          <TNGQuestion question={currentQuestion} />\r\n          <div className=\"tng-game-answers\">\r\n            {currentQuestion.answers.map((a, idx) => (\r\n              <TNGAnswer\r\n                selected={a.id === currentAnswer?.id}\r\n                statusQuestion={statusQuestion}\r\n                key={idx}\r\n                answer={a}\r\n                index={idx}\r\n                lg={isAnswerLg}\r\n                onSelected={() => handleSelectAnswer(a)}\r\n                helpQuestions={helpQuestions}\r\n                answerSuccessId={answerSuccessId}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {showBet ? (\r\n          <TNGBet\r\n            point={point}\r\n            yourBet={yourBet}\r\n            onBetConfirm={handleBet}\r\n            onDismiss={handleCancelBet}\r\n            disableBet={true}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {isCompleted ? (\r\n          <TNGComplete point={point} handleRetryGame={handleRetryGame} />\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {isPlayGame && !isCompleted ? <TimeStartGameGuid /> : <></>}\r\n        {isShowGuid && <TNGGuidGame handleStartGame={handleStartBefore} />}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default TNGGame;\r\n"],"names":["size","className","src","logo","alt","USER_PROFILE_KEY","QUIZ_INFO_KEY","ACCESS_TOKEN_KEY","REFRESH_TOKEN_KEY","QUIZ_SUMMARY_INFO","HELP_QUESTION_AUDIO","answer","index","selected","onSelected","lg","statusQuestion","helpQuestions","answerSuccessId","getStyled","isFailed","includes","id","isSuccess","onClick","content","onDismiss","onBetConfirm","yourBet","disableBet","point","useWindowSize","width","height","useState","scale","setScale","bet","setBet","useEffect","setTimeout","AOS","scaleX","scaleY","closeIcon","style","transform","text","disabled","props","isRetry","setIsRetry","handleRetryGame","accessToken","localStorage","getItem","setAxiosToken","authAPI","response","status","console","log","data","toast","getTeam","user","JSON","parse","getSummaryInfo","getLocalQuiz","getStatusFinish","summary","trialCount","total","correctCount1","isFinish","correctCount2","condition","styled","isCase1","isCase2","canRetry","renderTitleTeamTNG","union","userName","display","alignItems","justifyContent","color","fontSize","fontFamily","onSkip","on5050","disableNextQuestion","onBet","disable5050","isLg","setIsLg","type","viewBox","fill","xmlns","cx","cy","r","d","marginBottom","question","qSize","setQSize","length","onCompleted","setCurrentTime","isCompleted","localEndTime","setLocalEndTime","quizInfo","end","stillUtc","moment","toDate","local","format","Date","onComplete","date","renderer","timer","minutes","seconds","url","isLoop","audio","useMemo","Audio","playing","setPlaying","currentTime","loop","play","pause","addEventListener","removeEventListener","isPlaying","playAudio","pauseAudio","handleStartGame","hour","getHours","min","getMinutes","questions","setQuestion","loading","setLoading","showBet","setShowBet","setYourBet","setIsCompleted","answers","currentQuestion","setCurrentQuestion","currentAnswer","setCurrentAnswer","tNGAudio","useAudio","tngLink","startReplyingAudio","successAudio","successReplyingAudio","successAnswerAudio","failedReplyAudio","notReplyAudio","helpQuestionAudio","waitingQuestionAudio","waitingAudio","muteAudio","setMuteAudio","waitingReplyAudio","setDisableBet","setPoint","setStatusQuestion","setDisableNextQuestion","isShowOut","setHelpQuestions","localUser","theme","setTheme","setAnswerSuccessId","isPlayGame","setIsPlayGame","isShowGuid","setIsShowGuid","getLocalQuizInfo","userParse","setTokenWithCallApi","res","setItem","stringify","getCurrentQuestions","allQuestions","unansweredQuestion","filter","x","userChooseAnswerId","handleTimeout","alert","quizSummaryInfo","handleRecheckTimeBeforeStart","getTime","pointBetAvailable","nextQuestion","helperAvailable","arrayHelpQuestion","handleConfigGame","getQuiz","summaryInfo","isQuiz","point1","point2","scaleR","handleSkip","quiz","newQuiz","handle5050","isAnswerLg","setIsAnswerLg","findIndex","a","totalQsCount","cancelSelect","handleSelectAnswer","params","questionId","answerId","pointBet","afterListQuestions","map","el","nextStateQuiz","currentPoint","result","getNumberQuestionsAnswered","isCorrectAnswer","correctAnswerId","currentQuestions","when","message","audioIcon","muteAudioIcon","idx","_bet"],"sourceRoot":""}